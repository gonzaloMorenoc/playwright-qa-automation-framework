name: 🎭 Playwright Tests CI/CD

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM

jobs:
  test:
    name: 🧪 Run Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        environment: [dev, staging, prod]
        browser: [chromium, firefox, webkit]
        
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: 🔧 Setup Environment
      run: |
        cp .env.example .env
        echo "BASE_URL=${{ secrets[format('BASE_URL_{0}', matrix.environment)] }}" >> .env
        echo "API_KEY=${{ secrets.API_KEY }}" >> .env
        
    - name: 🧪 Run E2E Tests
      run: npm run test:${{ matrix.environment }}
      env:
        CI: true
        BROWSER: ${{ matrix.browser }}
        
    - name: 📊 Run Performance Tests
      run: npm run test:performance
      if: matrix.environment == 'prod'
      
    - name: 🛡️ Run Security Tests
      run: npm run test:security
      if: matrix.environment == 'prod'
      
    - name: 📈 Generate Allure Report
      run: npm run test:allure
      if: always()
      
    - name: 📋 Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-results-${{ matrix.environment }}-${{ matrix.browser }}
        path: |
          reports/
          allure-results/
          test-results/
        retention-days: 30
        
    - name: 📸 Upload Screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: screenshots-${{ matrix.environment }}-${{ matrix.browser }}
        path: reports/screenshots/
        retention-days: 7
        
    - name: 🎬 Upload Videos
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: videos-${{ matrix.environment }}-${{ matrix.browser }}
        path: test-results/
        retention-days: 7

  performance:
    name: 🚀 Performance Analysis
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: 📊 Run Performance Analysis
      run: npm run performance:analyze
      
    - name: 📈 Upload Performance Report
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: reports/performance/
        retention-days: 30

  security:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔍 Run Security Scan
      run: npm run security:scan
      
    - name: 🛡️ Upload Security Report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: reports/security/
        retention-days: 30

  deploy-reports:
    name: 📊 Deploy Reports
    runs-on: ubuntu-latest
    needs: [test, performance, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Download Artifacts
      uses: actions/download-artifact@v3
      
    - name: 🚀 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./reports
        
  notification:
    name: 📢 Slack Notification
    runs-on: ubuntu-latest
    needs: [test, performance, security]
    if: always()
    
    steps:
    - name: 📢 Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'Playwright Tests: ${{ job.status }}'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}